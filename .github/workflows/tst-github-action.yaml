name: print out env vars

on: push

env:
  first_name: first_name
  last_name: last_name
  FIRST_NAME_LAST_NAME: nithinkuruba
  REF: test_secret
  name: TEST_SECRET
  GH_TOKEN: ${{ github.token }}
  TF_LOG: ERROR
  TF_LOG_PATH: ./terraform.log
  TF_VERSION: 1.1.4

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.error.outputs.status }}
      jobid: ${{ steps.error.outputs.jobid }}
    steps:
      - name: Emit Error
        id: error
        run: |
          echo "Error: error sending PUT request to /auth/admin/realms/master/identity-provider/instances/azureidir: 500 Internal Server Error. Response body: {error:unknown_error} Error: error sending PUT request to /auth/admin/realms/standard/identity-provider/instances/githubpublic: 500 Internal Server Error. Response body: {error:unknown_error} Error: error sending PUT request to /auth/admin/realms/github/identity-provider/instances/github/mappers/bb1a8da4-f904-4c8a-8458-95f2c71b7d0e: 500 Internal Server Error. Response body: <html><head><title>Error</title></head><body>Internal Server Error</body></html>"
          echo "status=failed" >> "$GITHUB_OUTPUT"
          echo "status=failed" >> "$GITHUB_OUTPUT"
          exit 1
  job2:
    runs-on: ubuntu-latest
    needs: job1
    if: ${{needs.job1.outputs.output1}} == 'failed'
    steps:
      - name: Pull the main branch again
        run: |
          git pull origin dev --rebase

      - name: Setup Terraform
        id: tf
        uses: bcgov/sso-requests-actions/actions/setup-terraform@v0.55.0
        with:
          context: .
          apply: false
        continue-on-error: true
      - name: Fetch Action Logs
        id: summary
        run: |
          summary=$(cat terraform.log | awk 'match($0, /gh .*/) {print substr($0, RSTART, RLENGTH)}' | tr '\n' ',' | sed -e 's|["'\'']||g')
          echo "$summary"
          echo "summary=$summary" >> "$GITHUB_OUTPUT"
      - name: Rocket.Chat Notification
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.WEBHOOK }}
          method: "POST"
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"text": "Terraform Batch Job Failed!", "attachments": [{"color": "#FF0000","author_name": "${{ github.actor }}", "title": "Failed job", "title_link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "text": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "fields": [{"title": "Error Summary", "value": "${{ steps.summary.outputs.summary }}", "short": false}]}]}'
